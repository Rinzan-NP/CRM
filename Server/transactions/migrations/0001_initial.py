# Generated by Django 5.2.5 on 2025-09-01 07:55

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('main', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('invoice_no', models.CharField(blank=True, max_length=50, unique=True)),
                ('issue_date', models.DateField()),
                ('due_date', models.DateField()),
                ('amount_due', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('paid_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('sent', 'Sent'), ('paid', 'Paid'), ('overdue', 'Overdue'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='accounts.company')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('paid_on', models.DateField()),
                ('mode', models.CharField(choices=[('cash', 'Cash'), ('bank', 'Bank')], max_length=30)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='accounts.company')),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='transactions.invoice')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PurchaseOrder',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order_number', models.CharField(blank=True, max_length=20, unique=True)),
                ('order_date', models.DateField()),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('confirmed', 'Confirmed'), ('received', 'Received'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('subtotal', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('vat_total', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('grand_total', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('prices_include_vat', models.BooleanField(default=False)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_orders', to='accounts.company')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_orders', to='main.supplier')),
            ],
        ),
        migrations.CreateModel(
            name='PurchaseOrderLineItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('quantity', models.PositiveIntegerField()),
                ('unit_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('discount', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('line_total', models.DecimalField(decimal_places=2, editable=False, max_digits=12)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.product')),
                ('purchase_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='line_items', to='transactions.purchaseorder')),
            ],
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('route_number', models.CharField(blank=True, max_length=20, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('date', models.DateField()),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='routes', to='accounts.company')),
                ('salesperson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RouteVisit',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('check_in', models.DateTimeField(blank=True, null=True)),
                ('check_out', models.DateTimeField(blank=True, null=True)),
                ('lat', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('lon', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('status', models.CharField(choices=[('planned', 'Planned'), ('visited', 'Visited'), ('missed', 'Missed')], default='planned', max_length=10)),
                ('notes', models.TextField(blank=True)),
                ('payment_collected', models.BooleanField(default=False)),
                ('payment_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('issues_reported', models.TextField(blank=True)),
                ('visit_duration_minutes', models.IntegerField(blank=True, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='route_visits', to='accounts.company')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.customer')),
                ('route', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='visits', to='transactions.route')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RouteLocationPing',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('lat', models.DecimalField(decimal_places=15, max_digits=20)),
                ('lon', models.DecimalField(decimal_places=15, max_digits=20)),
                ('accuracy_meters', models.DecimalField(blank=True, decimal_places=6, max_digits=12, null=True)),
                ('speed_mps', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True)),
                ('heading_degrees', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='route_location_pings', to='accounts.company')),
                ('route', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='location_pings', to='transactions.route')),
                ('visit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='location_pings', to='transactions.routevisit')),
            ],
        ),
        migrations.CreateModel(
            name='SalesOrder',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order_number', models.CharField(blank=True, max_length=20, unique=True)),
                ('order_date', models.DateField()),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('confirmed', 'Confirmed'), ('invoiced', 'Invoiced'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('subtotal', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('vat_total', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('grand_total', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('profit', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('prices_include_vat', models.BooleanField(default=False)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sales_orders', to='accounts.company')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sales_orders', to='main.customer')),
            ],
        ),
        migrations.AddField(
            model_name='routevisit',
            name='sales_orders',
            field=models.ManyToManyField(blank=True, related_name='route_visits', to='transactions.salesorder'),
        ),
        migrations.CreateModel(
            name='OrderLineItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('quantity', models.PositiveIntegerField()),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('discount', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('line_total', models.DecimalField(decimal_places=2, editable=False, max_digits=12)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.product')),
                ('sales_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='line_items', to='transactions.salesorder')),
            ],
        ),
        migrations.AddField(
            model_name='invoice',
            name='sales_order',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='invoice', to='transactions.salesorder'),
        ),
        migrations.AddIndex(
            model_name='purchaseorder',
            index=models.Index(fields=['supplier', 'status'], name='transaction_supplie_adc788_idx'),
        ),
        migrations.AddIndex(
            model_name='purchaseorder',
            index=models.Index(fields=['order_date'], name='transaction_order_d_73ba1d_idx'),
        ),
        migrations.AddIndex(
            model_name='purchaseorderlineitem',
            index=models.Index(fields=['purchase_order', 'product'], name='transaction_purchas_845c6e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='purchaseorderlineitem',
            unique_together={('purchase_order', 'product')},
        ),
        migrations.AddIndex(
            model_name='route',
            index=models.Index(fields=['route_number'], name='transaction_route_n_b21e86_idx'),
        ),
        migrations.AddIndex(
            model_name='route',
            index=models.Index(fields=['salesperson', 'date'], name='transaction_salespe_f01898_idx'),
        ),
        migrations.AddIndex(
            model_name='routelocationping',
            index=models.Index(fields=['route', 'created_at'], name='transaction_route_i_1b0c4d_idx'),
        ),
        migrations.AddIndex(
            model_name='salesorder',
            index=models.Index(fields=['customer', 'status'], name='transaction_custome_ed89db_idx'),
        ),
        migrations.AddIndex(
            model_name='salesorder',
            index=models.Index(fields=['order_date'], name='transaction_order_d_01b813_idx'),
        ),
        migrations.AddIndex(
            model_name='orderlineitem',
            index=models.Index(fields=['sales_order', 'product'], name='transaction_sales_o_629ffc_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='orderlineitem',
            unique_together={('sales_order', 'product')},
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['invoice_no'], name='transaction_invoice_ee121b_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['due_date'], name='transaction_due_dat_6e7fcc_idx'),
        ),
    ]
